mydir=lib$(S)crypto$(S)krb$(S)prng$(S)fortuna
BUILDTOP=$(REL)..$(S)..$(S)..$(S)..$(S)..
LOCALINCLUDES = -I$(srcdir)/.. -I$(srcdir)/../.. \
		-I$(srcdir)/../../../$(CRYPTO_IMPL)		\
		-I$(srcdir)/../../../$(CRYPTO_IMPL)/sha2 	\
		-I$(srcdir)/../../../$(CRYPTO_IMPL)/aes 	\
		-I$(srcdir)/../../../$(CRYPTO_IMPL)/enc_provider
DEFS=
RUN_SETUP = @KRB5_RUN_ENV@
PROG_LIBPATH=-L$(TOPLIBD)
PROG_RPATH=$(KRB5_LIBDIR)

STLIBOBJS= \
	prng_fortuna.o entropy.o
OBJS= \
	$(OUTPRE)prng_fortuna.$(OBJEXT) \
	$(OUTPRE)entropy.$(OBJEXT)

SRCS=\
	$(srcdir)/entropy.c \
	$(srcdir)/prng_fortuna.c 

all-unix:: all-libobjs

includes:: depend

depend:: $(SRCS)

t_fortuna: t_fortuna.$(OBJEXT) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o t_fortuna t_fortuna.$(OBJEXT) -lcom_err $(SUPPORT_LIB) $(CRYPTO_DEPLIB)

t_fortuna_make_oct: t_fortuna_make_oct.$(OBJEXT) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o t_fortuna_make_oct t_fortuna_make_oct.$(OBJEXT) -lcom_err $(SUPPORT_LIB) $(CRYPTO_DEPLIB)

check-unix:: t_fortuna t_fortuna_make_oct
# ifdef TEST_FORTUNA
ifeq ("@PRNG_FORTUNA_TEST@","yes")
	$(RUN_SETUP) $(VALGRIND) ./t_fortuna_make_oct > t_fortuna_make_oct.result && \
	diff t_fortuna_make_oct.result t_fortuna_make_oct.expected
else
	$(RUN_SETUP) $(VALGRIND) ./t_fortuna
	$(RUN_SETUP) $(VALGRIND) ./t_fortuna_make_oct > t_fortuna_make_oct.result
endif

clean::
	$(RM) t_fortuna$(EXEEXT) t_fortuna.$(OBJEXT)  t_fortuna_make_oct.result  t_fortuna_make_oct$(EXEEXT)  t_fortuna_make_oct.$(OBJEXT)


clean-unix:: clean-libobjs

@lib_frag@
@libobj_frag@

